from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from flask import Flask
import threading

TOKEN = '7600734297:AAEUfHpSLgxMyRj8vxC8rto3upyB9hVC2ys'  # –í—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω –æ—Ç BotFather

# –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
questions = [
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —É–±–∏—Ä–∞—Ç—å –∏–≥—Ä—É—à–∫–∏. –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è?",
        "a": [
            "1. \"–°–µ–π—á–∞—Å –∂–µ —É–±–µ—Ä–∏, –∏–Ω–∞—á–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ!\"",
            "2. \"–î–∞–≤–∞–π —É–±–µ—Ä–µ–º –≤–º–µ—Å—Ç–µ, –∞ –ø–æ—Ç–æ–º –ø–æ—á–∏—Ç–∞–µ–º –∫–Ω–∏–∂–∫—É\"",
            "3. \"–õ–∞–¥–Ω–æ, —è —Å–∞–º–∞ —É–±–µ—Ä—É\"",
            "4. –ù–µ –æ–±—Ä–∞—â–∞—é –≤–Ω–∏–º–∞–Ω–∏—è"
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ –ø–æ–ª—É—á–∏–ª –¥–≤–æ–π–∫—É. –í–∞—à–∞ —Ä–µ–∞–∫—Ü–∏—è?",
        "a": [
            "1. \"–¢—ã –±–µ—Å—Ç–æ–ª–∫–æ–≤—ã–π! –ù–∏–∫–∞–∫–∏—Ö –≥—É–ª—è–Ω–∏–π!\"",
            "2. \"–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä–µ–º –æ—à–∏–±–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–∏–º\"",
            "3. \"–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –±—ã–≤–∞–µ—Ç\"",
            "4. \"–¢–≤–æ–∏ –ø—Ä–æ–±–ª–µ–º—ã\""
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ –ø—Ä–æ—Å–∏—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É—à–∫—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ. –í—ã:",
        "a": [
            "1. \"–ù–µ—Ç, –∏ –≤—Å–µ!\"",
            "2. \"–î–∞–≤–∞–π –∑–∞–ø–∏—à–µ–º –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è\"",
            "3. \"–õ–∞–¥–Ω–æ, –±–µ—Ä–∏, —Ç–æ–ª—å–∫–æ –Ω–µ –ø–ª–∞—á—å\"",
            "4. \"–û—Ç—Å—Ç–∞–Ω—å, –º–Ω–µ –Ω–µ–∫–æ–≥–¥–∞\""
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ –≥–æ–≤–æ—Ä–∏—Ç \"–Ø —Å–∞–º!\", –Ω–æ —É –Ω–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è. –í—ã:",
        "a": [
            "1. \"–î–∞–π —è —Å–¥–µ–ª–∞—é, —É —Ç–µ–±—è –Ω–µ –≤—ã–π–¥–µ—Ç!\"",
            "2. \"–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑, —è –ø–æ–º–æ–≥—É –µ—Å–ª–∏ –Ω–∞–¥–æ\"",
            "3. \"–î–µ–ª–∞–π –∫–∞–∫ –∑–Ω–∞–µ—à—å\"",
            "4. –ù–µ –æ–±—Ä–∞—â–∞—é –≤–Ω–∏–º–∞–Ω–∏—è"
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ –ø–ª–∞—á–µ—Ç –∏–∑-–∑–∞ —Å—Å–æ—Ä—ã —Å –¥—Ä—É–≥–æ–º. –í—ã:",
        "a": [
            "1. \"–•–≤–∞—Ç–∏—Ç —Ä–µ–≤–µ—Ç—å! –°–∞–º–∞ –≤–∏–Ω–æ–≤–∞—Ç–∞!\"",
            "2. \"–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å. –î–∞–≤–∞–π –ø—Ä–∏–¥—É–º–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ\"",
            "3. \"–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –∫—É–ø–∏–º –º–æ—Ä–æ–∂–µ–Ω–æ–µ\"",
            "4. \"–†–∞–∑–±–∏—Ä–∞–π—Å—è —Å–∞–º–∞\""
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ –Ω–µ —Ö–æ—á–µ—Ç –ª–æ–∂–∏—Ç—å—Å—è —Å–ø–∞—Ç—å. –í—ã:",
        "a": [
            "1. \"–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –≤ –∫—Ä–æ–≤–∞—Ç—å!\"",
            "2. \"–î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º: —Å–µ–π—á–∞—Å –∏–ª–∏ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç?\"",
            "3. \"–õ–æ–∂–∏—Å—å –∫–æ–≥–¥–∞ —Ö–æ—á–µ—à—å\"",
            "4. \"–ú–Ω–µ –≤—Å–µ —Ä–∞–≤–Ω–æ\""
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ –≥–æ–≤–æ—Ä–∏—Ç \"–Ø —Ç–µ–±—è –Ω–µ–Ω–∞–≤–∏–∂—É!\". –í–∞—à–∞ —Ä–µ–∞–∫—Ü–∏—è:",
        "a": [
            "1. \"–ö–∞–∫ —Ç—ã —Å–º–µ–µ—à—å! –ù–∞–∫–∞–∑–∞–Ω!\"",
            "2. \"–Ø –≤–∏–∂—É, —Ç—ã –∑–ª–∏—à—å—Å—è. –î–∞–≤–∞–π –æ–±–Ω–∏–º–µ–º—Å—è?\"",
            "3. \"–ù—É –∏ –ª–∞–¥–Ω–æ\"",
            "4. –ò–≥–Ω–æ—Ä–∏—Ä—É—é"
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ —Ö–æ—á–µ—Ç –Ω–∞–¥–µ—Ç—å –≤ —Å–∞–¥ –Ω–µ–ª–µ–ø—ã–π –Ω–∞—Ä—è–¥. –í—ã:",
        "a": [
            "1. \"–ù–∞–¥–µ–Ω–µ—à—å —Ç–æ, —á—Ç–æ —è —Å–∫–∞–∑–∞–ª–∞!\"",
            "2. \"–î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º —á—Ç–æ-—Ç–æ –≤–º–µ—Å—Ç–µ\"",
            "3. \"–ù—É —Ö–æ—Ä–æ—à–æ, –∏–¥–∏ —Ç–∞–∫\"",
            "4. \"–ú–Ω–µ –≤—Å–µ —Ä–∞–≤–Ω–æ\""
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ —Ä–∞–∑–±–∏–ª –≤–∞–∑—É. –í—ã:",
        "a": [
            "1. \"–†—É–∫–∏-–∫—Ä—é–∫–∏! –í–µ—á–Ω–æ —É —Ç–µ–±—è –≤—Å–µ –ø–∞–¥–∞–µ—Ç!\"",
            "2. \"–î–∞–≤–∞–π —É–±–µ—Ä–µ–º –æ—Å–∫–æ–ª–∫–∏ –≤–º–µ—Å—Ç–µ. –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ\"",
            "3. \"–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ\"",
            "4. \"–°–∞–º —Ä–∞–∑–±–∏—Ä–∞–π—Å—è\""
        ]
    },
    {
        "q": "–†–µ–±–µ–Ω–æ–∫ –ø—Ä–æ—Å–∏—Ç –≤–∞—à–µ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è, –∞ –≤—ã —É—Å—Ç–∞–ª–∏. –í—ã:",
        "a": [
            "1. \"–ù–µ –º–µ—à–∞–π!\"",
            "2. \"–î–∞–≤–∞–π —è –æ—Ç–¥–æ—Ö–Ω—É 15 –º–∏–Ω—É—Ç, –∞ –ø–æ—Ç–æ–º –ø–æ–∏–≥—Ä–∞–µ–º\"",
            "3. \"–í–æ—Ç —Ç–µ–±–µ –ø–ª–∞–Ω—à–µ—Ç\"",
            "4. \"–û—Ç—Å—Ç–∞–Ω—å\""
        ]
    }
]

# –ö–æ–¥—ã –æ—Ç–≤–µ—Ç–æ–≤ (–±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å —Å—Ç–∏–ª–∏)
answer_map = {
    "1": "–ê–≤—Ç–æ—Ä–∏—Ç–∞—Ä–Ω—ã–π",
    "2": "–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π",
    "3": "–õ–∏–±–µ—Ä–∞–ª—å–Ω—ã–π",
    "4": "–ò–Ω–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ç–Ω—ã–π"
}

user_data = {}

def start(update: Update, context: CallbackContext):
    name = update.message.from_user.first_name
    update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {name}!\n"
        "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å, –∫–∞–∫–æ–π —É –≤–∞—Å —Å—Ç–∏–ª—å –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—è –∏ –∫–∞–∫ –æ–Ω –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ–±–µ–Ω–∫–∞?\n\n"
        "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç (10 –≤–æ–ø—Ä–æ—Å–æ–≤) ‚Üí /start_test"
    )

def start_test(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id] = {
        "current_q": 0,
        "answers": []
    }
    send_question(update, context)

def send_question(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    data = user_data[user_id]
    q_num = data["current_q"]
    if q_num < len(questions):
        q_data = questions[q_num]
        keyboard = [[a] for a in q_data["a"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        update.message.reply_text(f"–í–æ–ø—Ä–æ—Å {q_num + 1}:\n{q_data['q']}", reply_markup=reply_markup)
    else:
        show_result(update, context)

def handle_answer(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    text = update.message.text
    data = user_data.get(user_id)
    if not data:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å /start_test")
        return

    # –û–ø—Ä–µ–¥–µ–ª–∏–º –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    for i in range(4):
        if text.startswith(str(i + 1)):
            data["answers"].append(str(i + 1))
            break
    else:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return

    data["current_q"] += 1
    send_question(update, context)

def show_result(update: Update, context: CallbackContext):
    from telegram import InlineKeyboardMarkup, InlineKeyboardButton
    user_id = update.message.from_user.id
    answers = user_data[user_id]["answers"]
    style_count = {"–ê–≤—Ç–æ—Ä–∏—Ç–∞—Ä–Ω—ã–π": 0, "–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π": 0, "–õ–∏–±–µ—Ä–∞–ª—å–Ω—ã–π": 0, "–ò–Ω–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ç–Ω—ã–π": 0}
    for a in answers:
        style_count[answer_map[a]] += 1
    style = max(style_count, key=style_count.get)

    result_texts = {
        "–ê–≤—Ç–æ—Ä–∏—Ç–∞—Ä–Ω—ã–π": """üîπ *–£ –≤–∞—Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –ê–≤—Ç–æ—Ä–∏—Ç–∞—Ä–Ω—ã–π —Å—Ç–∏–ª—å:*
¬´–ö–∞–∂–µ—Ç—Å—è, –≤—ã –ø—Ä–∏–≤—ã–∫–ª–∏ –∫ —Å—Ç—Ä–æ–≥–∏–º –ø—Ä–∞–≤–∏–ª–∞–º‚Ä¶¬ª

–í—ã —á—ë—Ç–∫–æ –∑–Ω–∞–µ—Ç–µ, ¬´–∫–∞–∫ –Ω–∞–¥–æ¬ª, –∏ —Ç—Ä–µ–±—É–µ—Ç–µ —ç—Ç–æ–≥–æ –æ—Ç —Ä–µ–±—ë–Ω–∫–∞. –ù–æ –∏–Ω–æ–≥–¥–∞ –µ–º—É –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–µ–ø–ª–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã—Å–∫–∞–∑–∞—Ç—å—Å—è.

*–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:*
‚úîÔ∏è –û–±—ä—è—Å–Ω–∏—Ç—å –æ–¥–∏–Ω –∑–∞–ø—Ä–µ—Ç: _¬´–Ø –Ω–µ —Ä–∞–∑—Ä–µ—à–∞—é —Ç–µ–±–µ –µ—Å—Ç—å –∫–æ–Ω—Ñ–µ—Ç—ã –ø–µ—Ä–µ–¥ –æ–±–µ–¥–æ–º, –ø–æ—Ç–æ–º—É —á—Ç–æ‚Ä¶¬ª_
‚úîÔ∏è –°–ø—Ä–æ—Å–∏—Ç—å: _¬´–ê –∫–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å?¬ª_

_–•–æ—á–µ—Ç—Å—è –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞?
–û–Ω–ª–∞–π–Ω-–∏–Ω—Ç–µ–Ω—Å–∏–≤ ¬´–£–∑–Ω–∞–π —Å–µ–±—è ‚Äî —É–∑–Ω–∞–π —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞¬ª –ø–æ–º–æ–∂–µ—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –ø–æ-–Ω–æ–≤–æ–º—É.

üîπ –ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Ç–µ–º–ø–µ ‚Äî –∑–∞ –¥–µ–Ω—å –∏–ª–∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ.
üîπ –ë–µ–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π, –≤—Å—Ç—Ä–µ—á –∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.
üîπ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä—ã —Å–ø–æ–∫–æ–π–Ω—ã—Ö –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å.

üëâ –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ –≤–∞—Å –∂–¥–µ—Ç, –∫–æ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∞—Å—Ç ‚Äî –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:_""",

        "–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π": """üîπ *–£ –≤–∞—Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å—Ç–∏–ª—å:*
¬´–í—ã ‚Äî –º–∞—Å—Ç–µ—Ä –±–∞–ª–∞–Ω—Å–∞!¬ª

–í—ã —É–º–µ–µ—Ç–µ –∏ –ª—é–±–∏—Ç—å, –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã. –†–µ–±—ë–Ω–æ–∫ —Ä–∞—Å—Ç—ë—Ç –≤ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏, —á—Ç–æ –µ–≥–æ —Å–ª—ã—à–∞—Ç.

*–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!*
‚úîÔ∏è –î–∞–≤–∞–π—Ç–µ –±–æ–ª—å—à–µ –≤—ã–±–æ—Ä–∞: _¬´–ö–∞–∫—É—é —à–∞–ø–∫—É –Ω–∞–¥–µ–Ω–µ–º?¬ª_
‚úîÔ∏è –•–≤–∞–ª–∏—Ç–µ –∑–∞ —É—Å–∏–ª–∏—è, –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

_–•–æ—á–µ—Ç—Å—è –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞?
–û–Ω–ª–∞–π–Ω-–∏–Ω—Ç–µ–Ω—Å–∏–≤ ¬´–£–∑–Ω–∞–π —Å–µ–±—è ‚Äî —É–∑–Ω–∞–π —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞¬ª –ø–æ–º–æ–∂–µ—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –ø–æ-–Ω–æ–≤–æ–º—É.

üîπ –ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Ç–µ–º–ø–µ ‚Äî –∑–∞ –¥–µ–Ω—å –∏–ª–∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ.
üîπ –ë–µ–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π, –≤—Å—Ç—Ä–µ—á –∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.
üîπ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä—ã —Å–ø–æ–∫–æ–π–Ω—ã—Ö –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å.

üëâ –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ –≤–∞—Å –∂–¥–µ—Ç, –∫–æ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∞—Å—Ç ‚Äî –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:_""",

        "–õ–∏–±–µ—Ä–∞–ª—å–Ω—ã–π": """üîπ *–£ –≤–∞—Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –õ–∏–±–µ—Ä–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å:*
¬´–í—ã ‚Äî –¥—Ä—É–≥ —Å–≤–æ–µ–º—É —Ä–µ–±—ë–Ω–∫—É‚Ä¶¬ª

–í—ã –∏–∑–±–µ–≥–∞–µ—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏ –¥–∞—ë—Ç–µ –º–Ω–æ–≥–æ —Å–≤–æ–±–æ–¥—ã. –ù–æ –¥–µ—Ç—è–º –≤–∞–∂–Ω—ã –∏ –ø—Ä–∞–≤–∞, –∏ —á—ë—Ç–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞.

*–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:*
‚úîÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–æ: _¬´–ß–∏—Å—Ç–∏–º –∑—É–±—ã –ø–µ—Ä–µ–¥ —Å–Ω–æ–º¬ª_
‚úîÔ∏è –£—á–∏—Ç–µ—Å—å –≥–æ–≤–æ—Ä–∏—Ç—å ¬´–Ω–µ—Ç¬ª –∏ –æ–±—ä—è—Å–Ω—è—Ç—å –ø–æ—á–µ–º—É.

_–•–æ—á–µ—Ç—Å—è –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞?
–û–Ω–ª–∞–π–Ω-–∏–Ω—Ç–µ–Ω—Å–∏–≤ ¬´–£–∑–Ω–∞–π —Å–µ–±—è ‚Äî —É–∑–Ω–∞–π —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞¬ª –ø–æ–º–æ–∂–µ—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –ø–æ-–Ω–æ–≤–æ–º—É.

üîπ –ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Ç–µ–º–ø–µ ‚Äî –∑–∞ –¥–µ–Ω—å –∏–ª–∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ.
üîπ –ë–µ–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π, –≤—Å—Ç—Ä–µ—á –∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.
üîπ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä—ã —Å–ø–æ–∫–æ–π–Ω—ã—Ö –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å.

üëâ –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ –≤–∞—Å –∂–¥–µ—Ç, –∫–æ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∞—Å—Ç ‚Äî –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:_""",

        "–ò–Ω–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ç–Ω—ã–π": """üîπ *–£ –≤–∞—Å –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –ò–Ω–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ç–Ω—ã–π —Å—Ç–∏–ª—å:*
¬´–í—ã —Ä–µ–¥–∫–æ –≤–º–µ—à–∏–≤–∞–µ—Ç–µ—Å—å –≤ –∂–∏–∑–Ω—å —Ä–µ–±—ë–Ω–∫–∞‚Ä¶¬ª

–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É—Å—Ç–∞–ª–∏ –∏–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –≤–∫–ª—é—á–∏—Ç—å—Å—è. –ù–æ —Ä–µ–±—ë–Ω–∫—É –≤–∞–∂–Ω–æ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É.

*–ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ:*
‚úîÔ∏è –ü—Ä–æ–≤–æ–¥–∏—Ç–µ 10 –º–∏–Ω—É—Ç –±–µ–∑ –≥–∞–¥–∂–µ—Ç–æ–≤
‚úîÔ∏è –°–ø—Ä–æ—Å–∏—Ç–µ: _¬´–ö–∞–∫ –ø—Ä–æ—à—ë–ª —Ç–≤–æ–π –¥–µ–Ω—å?¬ª_

_–•–æ—á–µ—Ç—Å—è –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞?
–û–Ω–ª–∞–π–Ω-–∏–Ω—Ç–µ–Ω—Å–∏–≤ ¬´–£–∑–Ω–∞–π —Å–µ–±—è ‚Äî —É–∑–Ω–∞–π —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞¬ª –ø–æ–º–æ–∂–µ—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –ø–æ-–Ω–æ–≤–æ–º—É.

üîπ –ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Ç–µ–º–ø–µ ‚Äî –∑–∞ –¥–µ–Ω—å –∏–ª–∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ.
üîπ –ë–µ–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π, –≤—Å—Ç—Ä–µ—á –∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.
üîπ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä—ã —Å–ø–æ–∫–æ–π–Ω—ã—Ö –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å.

üëâ –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ –≤–∞—Å –∂–¥–µ—Ç, –∫–æ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∞—Å—Ç ‚Äî –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:_"""
    }

    buttons = [
        [InlineKeyboardButton("üéØ –•–æ—á—É –Ω–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤", url="https://kids-psy.ru/intensive/relaunch")],
        [InlineKeyboardButton("üîÅ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â—ë —Ä–∞–∑", switch_inline_query_current_chat="/start_test")]
    ]

    update.message.reply_text(
        result_texts[style],
        parse_mode='Markdown',
        reply_markup=InlineKeyboardMarkup(buttons)
    )
    user_data.pop(user_id)


app = Flask(__name__)

@app.route('/ping', methods=['GET', 'HEAD'])
def ping():
    return 'pong', 200

def run_flask():
    app.run(host='0.0.0.0', port=8080)


def main():
    threading.Thread(target=run_flask).start()
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("start_test", start_test))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_answer))
    updater.start_polling()
    print("Bot started. Listening...")
    updater.idle()

if __name__ == '__main__':
    main()


